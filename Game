import time
from random import *
# Get TKinter ready to go
from tkinter import *
window = Tk()
canvas = Canvas(window, width=800, height=600, bg='white')
canvas.pack(padx=10,pady=10)
rand1=int(1/90) # - 
rand2=1-rand1 #   - these two are to generate a new random direction.
# The velocity, or distance moved per time step
vx = randint(rand1,rand2)/10000000 # x velocity
# Boundaries
x_min = 0.0
y_min = 0.0
x_max = 800.0
y_max = 600.0
id1=canvas.create_rectangle(3,7,3+10,7+10)
# Move robot for 500 timesteps
for t in range(1, 50000):
    x1,y1,x2,y2=canvas.coords(id1)
    # If a boundary has been crossed, reverse the direction
    if x2 >= x_max:
        vx = -randint(rand1,rand2)
        if vy<0:
            vy=-(nrrandm+vx)
        elif vy>0:
            vy=(nrrandm+vx)
        print("max x "+str(vx)+", "+str(vy))
    if y1 <= y_min:
        vy = randint(rand1,rand2)
        if vx<0:
            vx=-(nrrandm-vy)
        elif vx>0:
            vx=(nrrandm-vy)
        print("min y "+str(vx)+", "+str(vy))
    if y2 >= y_max:
        vy = -randint(rand1,rand2)
        if vx<0:
            vx=-(nrrandm+vy)
        elif vx>0:
            vx=(nrrandm+vy)
        print("max y "+str(vx)+", "+str(vy))
    if x1 <= x_min:
        vx = randint(rand1,rand2)
        if vy<0:
            vy=-(nrrandm-vx)
        elif vy>0:
            vy=(nrrandm-vx)
        print("min x "+str(vx)+", "+str(vy))
    # Move robot a fixed amount
    canvas.coords(id1,x1+vx,y1+vy,x2+vx,y2+vy)
    canvas.update()
    # the only thing we change, it changes the speed.((seconds from x0 to x1)/x1)
    time.sleep(0.00375)
window.mainloop()
import tkinter
window = tkinter.Tk()
window.title("Daenerys Game")
window.wm_iconbitmap("Icon.ico")
photo = ktinker.PhotoImage(file = "dragon.gif")
lbl = tkinter.Entry(window)
btn = tkinter.Button(window, text = "New Game", fg = "#383a39", bg="#a1dbcd")
btn.pack()
lbl.pack()
btn2 = tkinter.Button(window, text = "Load Game", fg = "#383a39", bg="#a1dbcd")
btn2.pack()
lbl.pack()
ent.pack()
btn3 = tkinter.Button(window, text = "Quit", fg = "#383a39", bg="#a1dbcd")
btn3.pack()
window.mainloop()

def upKey(event): 
    x1,y1,x2,y2=canvas.coords(Shape1)
    if y1 <= 0:
        canvas.coords(Shape1,x1,y1,x2,y2)
    else:
        canvas.coords(Shape1,x1,y1-Movement_Speed,x2,y2-Movement_Speed)
        
def downKey(event):
    x1,y1,x2,y2=canvas.coords(Shape1)
    if y2 >= Window_Height:
        canvas.coords(Shape1,x1,y1,x2,y2)
    else:
        canvas.coords(Shape1,x1,y1+Movement_Speed,x2,y2+Movement_Speed)        

def rightKey(event):
    x1,y1,x2,y2=canvas.coords(Shape1)
    Sx1,Sy1,Sx2,Sy2=canvas.coords(Shape2)
    if x2 > Sx1:
        canvas.coords(Shape1,x1,y1,x2,y2)
    elif x2 >= Window_Width:
        canvas.coords(Shape1,x1,y1,x2,y2)
    else:
        canvas.coords(Shape1,x1+Movement_Speed,y1,x2+Movement_Speed,y2)
    
def leftKey(event):
    x1,y1,x2,y2=canvas.coords(Shape1)
    Sx1,Sy1,Sx2,Sy2=canvas.coords(Shape2)
    if x1 <= 0:
        canvas.coords(Shape1,x1,y1,x2,y2)
    else:
        canvas.coords(Shape1,x1-Movement_Speed,y1,x2-Movement_Speed,y2)

canvas.update()
canvas.bind('<Right>', rightKey)
canvas.bind('<Left>', leftKey)
canvas.bind('<Up>', upKey)
canvas.bind('<Down>', downKey)
canvas.focus_set()
windowDisplay.mainloop()

