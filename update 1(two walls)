import time
from random import *
# Get TKinter ready to go
from tkinter import *
window = Tk()
canvas = Canvas(window, width=800, height=600, bg='white')
canvas.pack(padx=10,pady=10)

# The velocity, or distance moved per time step
# How many directions in a 90degrees angle
vx = randint(0,90)/90 # x velocity
vy = 1-vx # y velocity
# Boundaries
x_min = 0.0
y_min = 0.0
x_max = 800.0
y_max = 600.0
id1=canvas.create_rectangle(0,0,0+10,0+10) #Robot


#Avoid Wall
def avoid(vx,vy):
    for i in range(1,globals()["nrwalls"]+1):
        locals()['Obx'+str(i)+'1'],locals()['Oby'+str(i)+'1'],locals()['Obx'+str(i)+'2'],locals()['Oby'+str(i)+'2']=canvas.coords(globals()['id'+str(i+1)])
        if y2 >= locals()['Oby'+str(i)+'1'] and x2>locals()['Obx'+str(i)+'1'] and x1<locals()['Obx'+str(i)+'2'] and y2<locals()['Oby'+str(i)+'1']+10:
            vy = -randint(0,90)/90
            if vx<=0:
                vx=-(1+vy)
            elif vx>=0:
                vx=(1+vy)
        if x2>=locals()['Obx'+str(i)+'1'] and y1<=locals()['Oby'+str(i)+'2'] and x2<locals()['Obx'+str(i)+'1']+10 and y2>=locals()['Oby'+str(i)+'1']:
            vx = -randint(0,90)/90
            if vy<=0:
                vy=-(1+vx)
            elif vy>=0:
                vy=(1+vx)
        if y1 <= locals()['Oby'+str(i)+'2'] and x1>locals()['Obx'+str(i)+'1'] and x2<locals()['Obx'+str(i)+'2'] and y1>locals()['Oby'+str(i)+'2']-10:
            vy = randint(0,90)/90
            if vx<=0:
                vx=-(1-vy)
            elif vx>=0:
                vx=(1-vy)
        if x1<=locals()['Obx'+str(i)+'2'] and y1<=locals()['Oby'+str(i)+'2'] and y2>=locals()['Oby'+str(i)+'1'] and x1>locals()['Obx'+str(i)+'2']-10:
            vx = randint(0,90)/90
            if vy<=0:
                vy=-(1-vx)
            elif vy>=0:
                vy=(1-vx)
    return [vx, vy]

# Wall
colors=['red','blue','yellow','green','black','purple','orange','brown','grey','darkgreen']
nrwalls = 10
col=0
for i in range(1,nrwalls+1):
    walldirection=randint(1,2)
    if walldirection==1:
        globals()["Obx"+str(i)+"1"]=randint(0,x_max-50)
        globals()["Oby"+str(i)+"1"]=randint(0,y_max)
        globals()["Obx"+str(i)+"2"]=globals()["Obx"+str(i)+"1"]+50
        globals()["Oby"+str(i)+"2"]=globals()["Oby"+str(i)+"1"]+randint(50,y_max-300)
    if walldirection==2:
        globals()["Oby"+str(i)+"1"]=randint(0,y_max-50)
        globals()["Obx"+str(i)+"1"]=randint(0,x_max)
        globals()["Oby"+str(i)+"2"]=globals()["Oby"+str(i)+"1"]+50
        globals()["Obx"+str(i)+"2"]=globals()["Obx"+str(i)+"1"]+randint(50,x_max-300)
    globals()["id"+str(i+1)]=canvas.create_rectangle(globals()["Obx"+str(i)+"1"], globals()["Oby"+str(i)+"1"], globals()["Obx"+str(i)+"2"], globals()["Oby"+str(i)+"2"], fill=colors[col])
    col=col+1
    print('object id: '+str(globals()['id'+str(i+1)])+', object color: '+colors[col-1])
  
# Move robot for 500 timesteps
for t in range(1, 50000):
    x1,y1,x2,y2=canvas.coords(id1)
    vx=avoid(vx,vy)[0]
    vy=avoid(vx,vy)[1]
    if x2 >= x_max:
        vx = -randint(0,90)/90
        if vy<=0:
            vy=-(1+vx)
        elif vy>=0:
            vy=(1+vx)
        print("max x "+str(vx)+", "+str(vy))
    if y1 <= y_min:
        vy = randint(0,90)/90
        if vx<=0:
            vx=-(1-vy)
        elif vx>=0:
            vx=(1-vy)
        print("min y "+str(vx)+", "+str(vy))
    if y2 >= y_max:
        vy = -randint(0,90)/90
        if vx<=0:
            vx=-(1+vy)
        elif vx>=0:
            vx=(1+vy)
        print("max y "+str(vx)+", "+str(vy))
    if x1 <= x_min:
        vx = randint(0,90)/90
        if vy<=0:
            vy=-(1-vx)
        elif vy>=0:
            vy=(1-vx)
        print("min x "+str(vx)+", "+str(vy))
    # Move robot a fixed amount
    canvas.coords(id1,x1+vx,y1+vy,x2+vx,y2+vy)
    canvas.update()
    # Changes the speed((seconds from x1 to x2)/x2)
    time.sleep(0.001)
window.mainloop()
